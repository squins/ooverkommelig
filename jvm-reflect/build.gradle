plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.jetbrains.dokka'
    id 'org.jetbrains.kotlin.jvm'
    id 'signing'
}

archivesBaseName = 'ooverkommelig'

repositories {
    mavenCentral()
}

dependencies {
    api project(':main')
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'

    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

java {
    toolchain {
        withJavadocJar()
        withSourcesJar()
    }
}

tasks.getByName("javadocJar") {
    from(dokkaJavadoc)
}

// Put your GPG and Sonatype credentials in "gradle.properties".
//
// Documentation for GPG:
//     https://docs.gradle.org/current/userguide/signing_plugin.html#sec:signatory_credentials
if (project.hasProperty('signing.keyId') && project.hasProperty('signing.password') && project.hasProperty('signing.secretKeyRingFile') && project.hasProperty('sonatype.username') && project.hasProperty('sonatype.password')) {
    publishing {
        publications {
            jvm(MavenPublication) {
                artifactId "$archivesBaseName-$project.name"

                from components.java

                pom {
                    name = "OOverkommelig"
                    description = "Manageable dependency injection for Kotlin."
                    url = "https://ooverkommelig.org/"
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://mit-license.org/'
                        }
                    }
                    scm {
                        connection = 'scm:git:git@github.com:squins/ooverkommelig.git'
                        developerConnection = 'scm:git:scm:git:git@github.com:squins/ooverkommelig.git'
                        url = 'scm:git:git@github.com:squins/ooverkommelig.git'
                    }
                    developers {
                        developer {
                            id = "jstuyts"
                            name = "Johan Stuyts"
                            email = "j.stuyts@javathinker.com"
                        }
                        developer {
                            id = "keesvandieren"
                            name = "Kees van Dieren"
                            email = "keesvandieren@squins.com"
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                name = "ossSonatype"
                def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots'
                def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username = project.property("sonatype.username")
                    password = project.property("sonatype.password")
                }
            }
        }
    }

    signing {
        sign publishing.publications
    }
}
